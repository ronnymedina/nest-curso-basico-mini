var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.251,1,1.728]],["body/controllers/AppController.html",[0,1.78,1,2.458,2,1.35,3,0.728,4,0.614,5,0.614,6,2.249,7,0.51,8,2.081,9,3.523,10,1.35,11,0.058,12,0.997,13,2.83,14,1.579,15,1.314,16,0.959,17,0.997,18,2.327,19,2.83,20,0.728,21,0.246,22,2.249,23,2.83,24,1.579,25,2.83,26,0.032,27,0.042,28,0.032]],["title/modules/AppModule.html",[29,1.251,30,1.463]],["body/modules/AppModule.html",[2,1.248,3,0.673,4,0.568,5,0.568,11,0.058,16,1.031,17,0.922,20,0.673,21,0.228,26,0.03,27,0.04,28,0.03,29,1.914,30,2.581,31,1.248,32,1.248,33,1.724,34,1.724,35,1.248,36,2.332,37,1.724,38,2.079,39,2.079,40,1.897,41,2.332,42,1.724,43,1.724,44,2.617,45,2.812,46,2.079,47,1.248,48,2.617,49,2.617]],["title/injectables/AppService.html",[18,1.463,50,1.251]],["body/injectables/AppService.html",[3,0.782,4,0.66,5,0.66,7,0.548,8,2.18,9,3.621,11,0.057,12,1.071,14,1.696,15,1.377,16,0.782,17,1.071,18,2.18,20,0.782,21,0.265,24,1.696,26,0.034,27,0.044,28,0.034,50,1.865,51,2.004,52,2.416,53,3.041,54,3.041,55,3.041]],["title/classes/CreateUserDto.html",[21,0.228,56,1.251]],["body/classes/CreateUserDto.html",[3,0.636,4,0.536,5,0.536,7,0.446,10,1.858,11,0.057,12,1.372,15,1.603,16,0.876,20,0.636,21,0.296,26,0.028,27,0.039,28,0.028,56,1.625,57,1.38,58,1.965,59,2.244,60,2.567,61,2.567,62,1.597,63,1.372,64,2.473,65,2.473,66,3.405,67,2.473,68,2.473,69,3.405,70,4.197,71,1.965,72,3.334,73,1.18]],["title/classes/User.html",[21,0.228,74,1.075]],["body/classes/User.html",[3,0.606,4,0.511,5,0.511,7,0.425,10,1.811,11,0.058,12,1.338,15,1.579,16,0.847,20,0.976,21,0.205,26,0.027,27,0.037,28,0.027,47,1.124,57,1.315,59,2.17,60,2.502,61,2.502,62,1.556,63,1.448,74,1.556,75,1.315,76,4.599,77,2.356,78,2.356,79,2.356,80,2.616,81,2.356,82,3.293,83,1.553,84,0.966,85,1.315,86,1.315,87,1.872]],["title/classes/UserSerializer.html",[21,0.228,88,1.463]],["body/classes/UserSerializer.html",[3,0.597,4,0.503,5,0.503,7,0.418,10,1.948,11,0.057,12,1.438,15,1.647,16,0.838,20,0.597,21,0.283,26,0.026,27,0.037,28,0.026,57,1.294,59,2.147,60,2.481,61,2.481,62,1.543,63,1.438,72,3.243,73,1.107,88,1.817,89,1.843,90,3.765,91,3.765,92,2.32,93,3.765,94,2.32,95,2.32,96,2.32,97,4.082,98,1.529]],["title/controllers/UsersController.html",[0,1.251,99,1.463]],["body/controllers/UsersController.html",[0,0.677,2,0.677,3,0.365,4,0.308,5,0.308,7,0.256,8,1.258,10,1.338,11,0.058,12,0.988,14,1.564,15,0.988,16,0.953,17,0.5,20,0.365,21,0.196,22,1.128,24,1.564,26,0.016,27,0.026,28,0.016,56,1.768,62,0.924,63,1.306,73,0.677,85,1.564,88,1.943,98,0.936,99,1.258,100,1.128,101,1.42,102,1.42,103,4.152,104,2.254,105,1.791,106,3.192,107,1.42,108,1.42,109,2.766,110,1.42,111,1.42,112,1.42,113,1.791,114,1.791,115,2.944,116,1.128,117,1.42,118,1.42,119,1.42,120,1.791,121,1.42,122,2.254,123,1.42,124,1.42,125,2.254,126,1.42,127,1.128,128,1.42,129,1.128,130,1.149,131,1.128,132,1.42,133,2.254,134,2.254,135,3.192,136,2.803,137,1.42,138,3.192,139,3.706,140,2.803,141,1.42,142,2.803,143,2.803,144,2.227,145,1.42,146,1.42,147,1.42,148,1.42,149,1.42]],["title/modules/UsersModule.html",[29,1.251,40,1.075]],["body/modules/UsersModule.html",[2,1.416,3,0.524,4,0.442,5,0.442,11,0.058,16,1.098,17,0.718,20,0.763,21,0.177,26,0.023,27,0.034,28,0.023,29,1.671,31,0.972,32,0.972,33,1.342,34,1.342,35,0.972,36,2.307,37,1.342,40,1.806,41,1.956,42,1.342,43,1.342,45,1.618,46,1.618,47,0.972,62,0.835,73,0.972,74,1.216,80,1.618,84,0.835,85,1.656,86,1.656,99,1.953,130,1.75,131,1.618,150,1.618,151,1.618,152,1.342,153,2.358,154,2.037,155,2.358,156,1.618,157,2.037,158,1.956,159,1.136,160,1.618,161,1.618,162,1.618,163,1.618,164,1.618,165,1.618,166,2.037,167,2.037,168,1.342,169,1.618,170,1.618]],["title/injectables/UsersService.html",[50,1.251,130,1.075]],["body/injectables/UsersService.html",[3,0.427,4,0.36,5,0.36,7,0.299,8,1.421,11,0.059,12,1.225,14,1.939,15,1.092,16,0.964,17,0.585,20,0.427,21,0.145,24,1.729,26,0.019,27,0.029,28,0.019,47,0.792,50,1.216,51,1.095,56,1.789,62,1.537,63,1.092,74,0.681,83,1.095,84,0.681,85,0.927,105,2.024,109,2.462,113,2.462,114,2.462,115,3.462,116,2.024,120,1.319,127,1.319,129,1.319,130,1.044,156,1.319,159,0.927,171,1.319,172,2.548,173,3.476,174,1.661,175,1.661,176,3.476,177,1.661,178,2.548,179,2.548,180,1.661,181,2.548,182,2.548,183,2.548,184,2.548,185,2.548,186,1.661,187,1.661,188,1.661,189,1.661,190,1.661,191,1.661,192,1.661,193,1.661,194,1.661,195,1.661,196,1.661,197,2.548,198,1.661]],["title/coverage.html",[199,2.336]],["body/coverage.html",[0,1.589,1,1.578,5,0.519,6,1.902,11,0.056,18,1.336,21,0.333,26,0.027,27,0.038,28,0.027,35,1.142,50,1.589,52,1.902,56,1.142,58,1.902,63,0.843,74,0.981,75,1.858,84,0.981,86,1.336,88,1.336,89,1.902,99,1.336,100,1.902,130,0.981,152,2.194,158,1.578,159,1.336,171,1.902,199,1.578,200,2.394,201,2.394,202,2.394,203,4.845,204,3.829,205,2.394,206,3.829,207,4.139,208,2.394,209,2.394,210,3.33,211,1.902,212,2.394,213,2.394,214,2.394]],["title/dependencies.html",[32,1.5,215,2.207]],["body/dependencies.html",[11,0.058,17,0.997,21,0.325,26,0.032,27,0.042,28,0.032,32,1.35,47,1.35,71,2.249,73,1.35,83,1.865,98,1.865,216,2.83,217,2.83,218,4.172,219,2.83,220,2.83,221,2.83,222,3.73,223,2.83,224,2.83,225,2.83,226,2.83,227,2.83,228,2.83,229,2.83,230,2.83,231,2.83,232,2.83,233,2.83,234,2.83,235,2.83,236,2.83]],["title/miscellaneous/functions.html",[237,0.905,238,2.498]],["body/miscellaneous/functions.html",[7,0.671,11,0.05,26,0.042,27,0.05,28,0.042,35,2.255,211,2.954,237,1.524,238,2.954,239,3.719]],["title/index.html",[7,0.398,240,2.207,241,2.207]],["body/index.html",[4,0.476,11,0.056,26,0.025,27,0.036,28,0.025,144,1.744,168,1.447,199,1.447,242,2.195,243,2.195,244,3.133,245,2.195,246,2.195,247,2.195,248,2.195,249,2.195,250,2.195,251,3.653,252,2.195,253,2.195,254,2.195,255,2.195,256,4.507,257,2.195,258,2.195,259,4.379,260,2.195,261,2.195,262,3.133,263,2.195,264,2.195,265,2.195,266,2.195,267,3.133,268,3.133,269,2.195,270,2.195,271,2.195,272,3.133,273,3.133,274,2.195,275,2.195,276,2.195,277,2.195,278,2.195,279,1.744,280,2.195,281,2.195,282,2.195,283,2.195,284,2.195,285,2.195,286,2.195,287,2.195,288,2.195,289,2.195,290,2.195,291,2.195,292,2.195,293,2.195,294,2.195,295,2.195,296,2.195,297,2.195]],["title/modules.html",[31,1.691]],["body/modules.html",[11,0.049,26,0.041,27,0.049,28,0.041,30,2.025,31,1.731,40,1.488,279,3.465,298,4.362,299,4.362,300,4.362]],["title/overview.html",[301,2.816]],["body/overview.html",[2,1.422,11,0.051,26,0.034,27,0.044,28,0.034,29,1.422,30,2.524,31,1.422,32,1.422,33,1.964,34,1.964,35,1.422,36,1.964,37,1.964,38,2.368,39,2.368,40,1.92,41,2.542,42,1.964,43,1.964,51,1.964,57,1.663,130,1.753,150,2.368,151,2.368,301,2.368,302,4.277,303,2.98]],["title/miscellaneous/typealiases.html",[237,0.905,304,3.145]],["body/miscellaneous/typealiases.html",[7,0.671,11,0.05,26,0.042,27,0.05,28,0.042,63,1.31,75,2.075,84,1.814,237,1.524,305,3.719,306,2.954]],["title/miscellaneous/variables.html",[237,0.905,307,2.498]],["body/miscellaneous/variables.html",[7,0.523,11,0.056,26,0.033,27,0.043,28,0.033,40,1.19,74,1.19,75,1.62,84,1.555,86,2.116,87,2.307,152,1.913,153,2.307,155,2.307,158,2.784,159,1.62,160,2.307,161,2.307,162,2.307,163,2.307,164,2.307,165,2.307,168,1.913,169,2.307,170,2.307,237,1.19,306,2.307,307,2.307,308,3.793,309,4.224,310,4.224]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":203,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":229,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":225,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":224,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":207,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":210,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":204,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":205,"title":{},"body":{"coverage.html":{}}}],["1.1.11",{"_index":217,"title":{},"body":{"dependencies.html":{}}}],["1/5",{"_index":209,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":302,"title":{},"body":{"overview.html":{}}}],["20",{"_index":208,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":303,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":231,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":236,"title":{},"body":{"dependencies.html":{}}}],["4.7.13",{"_index":223,"title":{},"body":{"dependencies.html":{}}}],["5.11.16",{"_index":226,"title":{},"body":{"dependencies.html":{}}}],["6.6.3",{"_index":233,"title":{},"body":{"dependencies.html":{}}}],["7.2.3",{"_index":220,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":218,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":90,"title":{},"body":{"classes/UserSerializer.html":{}}}],["addtag('user",{"_index":164,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["aliases",{"_index":305,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":280,"title":{},"body":{"index.html":{}}}],["api",{"_index":161,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["apibadrequestresponse",{"_index":133,"title":{},"body":{"controllers/UsersController.html":{}}}],["apicreatedresponse",{"_index":134,"title":{},"body":{"controllers/UsersController.html":{}}}],["apidescription",{"_index":158,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiinternalservererrorresponse",{"_index":135,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiokresponse",{"_index":136,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiproperty",{"_index":72,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserSerializer.html":{}}}],["apiproperty()@expose",{"_index":93,"title":{},"body":{"classes/UserSerializer.html":{}}}],["apiproperty()@isnotempty",{"_index":66,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty()@isemail",{"_index":64,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apis/users/users.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":168,"title":{},"body":{"modules/UsersModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["applications",{"_index":250,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["async",{"_index":103,"title":{},"body":{"controllers/UsersController.html":{}}}],["author",{"_index":290,"title":{},"body":{"index.html":{}}}],["await",{"_index":140,"title":{},"body":{"controllers/UsersController.html":{}}}],["backers",{"_index":281,"title":{},"body":{"index.html":{}}}],["body",{"_index":126,"title":{},"body":{"controllers/UsersController.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":300,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":298,"title":{},"body":{"modules.html":{}}}],["build",{"_index":165,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["building",{"_index":245,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":57,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":150,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":151,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["compodoc/compodoc",{"_index":216,"title":{},"body":{"dependencies.html":{}}}],["const",{"_index":85,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":174,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(@injectmodel(user.name",{"_index":190,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["constructor(usermodel",{"_index":175,"title":{},"body":{"injectables/UsersService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('users",{"_index":137,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":199,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["crear",{"_index":181,"title":{},"body":{"injectables/UsersService.html":{}}}],["create",{"_index":172,"title":{},"body":{"injectables/UsersService.html":{}}}],["create(createcatdto",{"_index":179,"title":{},"body":{"injectables/UsersService.html":{}}}],["createcatdto",{"_index":184,"title":{},"body":{"injectables/UsersService.html":{}}}],["createdcat",{"_index":193,"title":{},"body":{"injectables/UsersService.html":{}}}],["createdcat.save",{"_index":195,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuser",{"_index":104,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(@body",{"_index":145,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(createuserdto",{"_index":107,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserdto",{"_index":56,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["data",{"_index":139,"title":{},"body":{"controllers/UsersController.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":144,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["development",{"_index":258,"title":{},"body":{"index.html":{}}}],["document",{"_index":82,"title":{},"body":{"classes/User.html":{}}}],["documentation",{"_index":200,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":155,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["dto/user.dto",{"_index":129,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":269,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":246,"title":{},"body":{"index.html":{}}}],["email",{"_index":60,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{}}}],["example",{"_index":109,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["example'})@apibadrequestresponse({description",{"_index":111,"title":{},"body":{"controllers/UsersController.html":{}}}],["exclude",{"_index":91,"title":{},"body":{"classes/UserSerializer.html":{}}}],["excludeextraneousvalues",{"_index":143,"title":{},"body":{"controllers/UsersController.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["expose",{"_index":97,"title":{},"body":{"classes/UserSerializer.html":{}}}],["express",{"_index":222,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":173,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduser",{"_index":105,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["finduser(@param('id",{"_index":148,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduser(id",{"_index":116,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":244,"title":{},"body":{"index.html":{}}}],["function",{"_index":212,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":238,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":147,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id')@apiokresponse({type",{"_index":117,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@apiokresponse({type",{"_index":121,"title":{},"body":{"controllers/UsersController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":240,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":106,"title":{},"body":{"controllers/UsersController.html":{}}}],["grow",{"_index":276,"title":{},"body":{"index.html":{}}}],["hello",{"_index":54,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":287,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":294,"title":{},"body":{"index.html":{}}}],["id",{"_index":120,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":201,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["include",{"_index":170,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":153,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":50,"title":{"injectables/AppService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":51,"title":{},"body":{"injectables/AppService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":189,"title":{},"body":{"injectables/UsersService.html":{}}}],["installation",{"_index":255,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":257,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":122,"title":{},"body":{"controllers/UsersController.html":{}}}],["isemail",{"_index":69,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty",{"_index":70,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["join",{"_index":283,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":291,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":61,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":297,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":273,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":228,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":237,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":272,"title":{},"body":{"index.html":{}}}],["mode",{"_index":262,"title":{},"body":{"index.html":{}}}],["model",{"_index":176,"title":{},"body":{"injectables/UsersService.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":83,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":166,"title":{},"body":{"modules/UsersModule.html":{}}}],["mongoosemodule.forroot('mongodb://nestuser:nestuser@mydb:27017/nestdb?authsource=admin",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":286,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":292,"title":{},"body":{"index.html":{}}}],["name",{"_index":62,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":251,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":296,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":219,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":221,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":73,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserSerializer.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["new",{"_index":159,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":243,"title":{},"body":{"index.html":{}}}],["npm",{"_index":256,"title":{},"body":{"index.html":{}}}],["open",{"_index":274,"title":{},"body":{"index.html":{}}}],["optional",{"_index":114,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":301,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":215,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":127,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parameters",{"_index":113,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["plaintoclass",{"_index":128,"title":{},"body":{"controllers/UsersController.html":{}}}],["plaintoclass(userserializer",{"_index":142,"title":{},"body":{"controllers/UsersController.html":{}}}],["please",{"_index":284,"title":{},"body":{"index.html":{}}}],["post",{"_index":125,"title":{},"body":{"controllers/UsersController.html":{}}}],["post()@apicreatedresponse({description",{"_index":108,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":101,"title":{},"body":{"controllers/UsersController.html":{}}}],["private",{"_index":191,"title":{},"body":{"injectables/UsersService.html":{}}}],["production",{"_index":264,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":242,"title":{},"body":{"index.html":{}}}],["project",{"_index":275,"title":{},"body":{"index.html":{}}}],["promise",{"_index":115,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["prop",{"_index":76,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":59,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":192,"title":{},"body":{"injectables/UsersService.html":{}}}],["quot;example&quot",{"_index":186,"title":{},"body":{"injectables/UsersService.html":{}}}],["read",{"_index":285,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":227,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":254,"title":{},"body":{"index.html":{}}}],["reset",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":230,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":259,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":232,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":247,"title":{},"body":{"index.html":{}}}],["schema",{"_index":80,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":81,"title":{},"body":{"classes/User.html":{}}}],["schemafactory.createforclass(user",{"_index":87,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["serializers/user.serializer",{"_index":132,"title":{},"body":{"controllers/UsersController.html":{}}}],["server",{"_index":248,"title":{},"body":{"index.html":{}}}],["setdescription('example",{"_index":162,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["settitle('user",{"_index":160,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["setversion('1.0",{"_index":163,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":249,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":278,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":239,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.model.ts",{"_index":306,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../users.module.ts",{"_index":308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/apis/users/dto/user.dto.ts",{"_index":58,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/apis/users/dto/user.dto.ts:12",{"_index":67,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/apis/users/dto/user.dto.ts:16",{"_index":68,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/apis/users/dto/user.dto.ts:8",{"_index":65,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/apis/users/serializers/user.serializer.ts",{"_index":89,"title":{},"body":{"classes/UserSerializer.html":{},"coverage.html":{}}}],["src/apis/users/serializers/user.serializer.ts:10",{"_index":94,"title":{},"body":{"classes/UserSerializer.html":{}}}],["src/apis/users/serializers/user.serializer.ts:14",{"_index":96,"title":{},"body":{"classes/UserSerializer.html":{}}}],["src/apis/users/serializers/user.serializer.ts:18",{"_index":95,"title":{},"body":{"classes/UserSerializer.html":{}}}],["src/apis/users/serializers/user.serializer.ts:6",{"_index":92,"title":{},"body":{"classes/UserSerializer.html":{}}}],["src/apis/users/user.model.ts",{"_index":75,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/apis/users/user.model.ts:12",{"_index":79,"title":{},"body":{"classes/User.html":{}}}],["src/apis/users/user.model.ts:15",{"_index":78,"title":{},"body":{"classes/User.html":{}}}],["src/apis/users/user.model.ts:9",{"_index":77,"title":{},"body":{"classes/User.html":{}}}],["src/apis/users/users.controller.ts",{"_index":100,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/apis/users/users.controller.ts:16",{"_index":124,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/apis/users/users.controller.ts:26",{"_index":112,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/apis/users/users.controller.ts:35",{"_index":119,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/apis/users/users.module.ts",{"_index":152,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/apis/users/users.service.ts",{"_index":171,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/apis/users/users.service.ts:19",{"_index":180,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/apis/users/users.service.ts:25",{"_index":187,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/apis/users/users.service.ts:29",{"_index":188,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/apis/users/users.service.ts:8",{"_index":177,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":211,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":260,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":263,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":265,"title":{},"body":{"index.html":{}}}],["started",{"_index":241,"title":{"index.html":{}},"body":{}}],["starter",{"_index":253,"title":{},"body":{"index.html":{}}}],["statements",{"_index":202,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":288,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["support",{"_index":279,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":299,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":234,"title":{},"body":{"dependencies.html":{}}}],["swaggermodule",{"_index":154,"title":{},"body":{"modules/UsersModule.html":{}}}],["swaggermodule.createdocument(app",{"_index":169,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":214,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":213,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":268,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":271,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":270,"title":{},"body":{"index.html":{}}}],["tests",{"_index":267,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":277,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.usermodel(createcatdto",{"_index":194,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find().lean",{"_index":196,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id).lean",{"_index":198,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.create",{"_index":185,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":146,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":141,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduser(id",{"_index":149,"title":{},"body":{"controllers/UsersController.html":{}}}],["touch",{"_index":289,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":98,"title":{},"body":{"classes/UserSerializer.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["true",{"_index":138,"title":{},"body":{"controllers/UsersController.html":{}}}],["true})@apiinternalservererrorresponse",{"_index":123,"title":{},"body":{"controllers/UsersController.html":{}}}],["twitter",{"_index":295,"title":{},"body":{"index.html":{}}}],["type",{"_index":63,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserSerializer.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":304,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":252,"title":{},"body":{"index.html":{}}}],["ui",{"_index":235,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":182,"title":{},"body":{"injectables/UsersService.html":{}}}],["unit",{"_index":266,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":197,"title":{},"body":{"injectables/UsersService.html":{}}}],["user",{"_index":74,"title":{"classes/User.html":{}},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.model",{"_index":156,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.name",{"_index":167,"title":{},"body":{"modules/UsersModule.html":{}}}],["userdocument",{"_index":84,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["usermodel",{"_index":178,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":102,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":157,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":131,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["userschema",{"_index":86,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":99,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userserializer",{"_index":88,"title":{"classes/UserSerializer.html":{}},"body":{"classes/UserSerializer.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userserializer})@apiinternalservererrorresponse",{"_index":118,"title":{},"body":{"controllers/UsersController.html":{}}}],["userserializer})@apiinternalservererrorresponse({description",{"_index":110,"title":{},"body":{"controllers/UsersController.html":{}}}],["usersmodule",{"_index":40,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["usersservice",{"_index":130,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usuario",{"_index":183,"title":{},"body":{"injectables/UsersService.html":{}}}],["validator",{"_index":71,"title":{},"body":{"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":206,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":307,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":261,"title":{},"body":{"index.html":{}}}],["website",{"_index":293,"title":{},"body":{"index.html":{}}}],["world",{"_index":55,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":282,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersModule } from './apis/users/users.module';\n\n@Module({\n  imports: [\n    MongooseModule.forRoot('mongodb://nestuser:nestuser@mydb:27017/nestdb?authSource=admin'),\n    UsersModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apis/users/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                lastName\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/apis/users/dto/user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/apis/users/dto/user.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/apis/users/dto/user.dto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  lastName: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apis/users/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                lastName\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/apis/users/user.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/apis/users/user.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/apis/users/user.model.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type UserDocument = User & Document;\n\n@Schema()\nexport class User {\n  @Prop()\n  email: string;\n\n  @Prop()\n  name: string;\n\n  @Prop()\n  lastName: string;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSerializer.html":{"url":"classes/UserSerializer.html","title":"class - UserSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apis/users/serializers/user.serializer.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                email\n                            \n                            \n                                lastName\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/apis/users/serializers/user.serializer.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/apis/users/serializers/user.serializer.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/apis/users/serializers/user.serializer.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/apis/users/serializers/user.serializer.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UserSerializer {\n  @Exclude()\n  _id: string;\n\n  @ApiProperty()\n  @Expose()\n  email: string;\n\n  @ApiProperty()\n  @Expose()\n  name: string;\n\n  @ApiProperty()\n  @Expose()\n  lastName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apis/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                findUser\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({description: 'example', type: UserSerializer})@ApiInternalServerErrorResponse({description: 'example'})@ApiBadRequestResponse({description: 'example'})\n                \n            \n\n            \n                \n                    Defined in src/apis/users/users.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: UserSerializer})@ApiInternalServerErrorResponse()\n                \n            \n\n            \n                \n                    Defined in src/apis/users/users.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: UserSerializer, isArray: true})@ApiInternalServerErrorResponse()\n                \n            \n\n            \n                \n                    Defined in src/apis/users/users.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param } from '@nestjs/common';\nimport { plainToClass } from 'class-transformer';\n\nimport { CreateUserDto } from './dto/user.dto';\nimport { UsersService } from './users.service';\nimport { UserSerializer } from './serializers/user.serializer';\nimport { ApiBadRequestResponse, ApiCreatedResponse, ApiInternalServerErrorResponse, ApiOkResponse } from '@nestjs/swagger';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private usersService: UsersService) { }\n\n  @Get()\n  @ApiOkResponse({ type: UserSerializer, isArray: true })\n  @ApiInternalServerErrorResponse()\n  async getUsers(): Promise {\n    const data = await this.usersService.findAll();\n\n    return plainToClass(UserSerializer, data, { excludeExtraneousValues: true });\n  }\n\n  @Post()\n  @ApiCreatedResponse({ description: 'example', type:  UserSerializer})\n  @ApiInternalServerErrorResponse({ description: 'example' })\n  @ApiBadRequestResponse({ description: 'example' })\n  async createUser(@Body() createUserDto: CreateUserDto): Promise {\n    const data = await this.usersService.create(createUserDto);\n\n    return plainToClass(UserSerializer, data, { excludeExtraneousValues: true })\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: UserSerializer})\n  @ApiInternalServerErrorResponse()\n  async findUser(@Param('id') id: string): Promise {\n    const data = await this.usersService.findUser(id);\n\n    return plainToClass(UserSerializer, data, { excludeExtraneousValues: true });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/apis/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { INestApplication, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';\nimport { User, UserSchema } from './user.model';\n\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\nconst apiDescription = new DocumentBuilder()\n  .setTitle('User Api')\n  .setDescription('Example user')\n  .setVersion('1.0')\n  .addTag('user')\n  .build();\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }])\n  ],\n  providers: [UsersService],\n  controllers: [UsersController]\n})\nexport class UsersModule {}\n\nexport const userDocument = (app: INestApplication) =>\n  SwaggerModule.createDocument(app, apiDescription, { include: [UsersModule] });\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apis/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/apis/users/users.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createCatDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/apis/users/users.service.ts:19\n                \n            \n\n\n            \n                \n                    Crear un usuario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            this.userService.create({ name: &quot;example&quot; })\n                        \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/apis/users/users.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findUser\n                        \n                        \n                    \n                \n            \n            \n                \nfindUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/apis/users/users.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Model } from 'mongoose';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User, UserDocument } from './user.model';\nimport { CreateUserDto } from './dto/user.dto';\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectModel(User.name) private userModel: Model) {}\n\n  /**\n   * Crear un usuario\n   *\n   * @public\n   * @param {CreateUserDto} createCatDto\n   * @returns {Promise}\n   * @example this.userService.create({ name: \"example\" })\n   */\n  create(createCatDto: CreateUserDto): Promise {\n    const createdCat = new this.userModel(createCatDto);\n\n    return createdCat.save();\n  }\n\n  findAll(): Promise {\n    return this.userModel.find().lean() as unknown as Promise;\n  }\n\n  findUser(id: string): Promise {\n    return this.userModel.findById(id).lean() as unknown as Promise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/apis/users/dto/user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/apis/users/serializers/user.serializer.ts\n            \n            class\n            UserSerializer\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/apis/users/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/apis/users/user.model.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apis/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/apis/users/users.module.ts\n            \n            variable\n            apiDescription\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apis/users/users.module.ts\n            \n            variable\n            userDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apis/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.11\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/mongoose : ^7.2.3\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.7.13\n        \n            class-transformer : ^0.3.2\n        \n            class-validator : ^0.13.1\n        \n            mongoose : ^5.11.16\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            swagger-ui-express : ^4.1.6\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserDocument   (src/.../user.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/apis/users/user.model.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiDescription   (src/.../users.module.ts)\n                        \n                        \n                            userDocument   (src/.../users.module.ts)\n                        \n                        \n                            UserSchema   (src/.../user.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/apis/users/users.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            apiDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new DocumentBuilder()\n  .setTitle('User Api')\n  .setDescription('Example user')\n  .setVersion('1.0')\n  .addTag('user')\n  .build()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userDocument\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (app: INestApplication) =>\n  SwaggerModule.createDocument(app, apiDescription, { include: [UsersModule] })\n                        \n                    \n\n\n            \n        \n\n    src/apis/users/user.model.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(User)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
